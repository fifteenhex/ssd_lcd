BOOT_IMAGE_LIST = ipl ipl_cust uboot
IMAGE_LIST = cis boot misc rtos
OTA_IMAGE_LIST = boot misc rtos
FLASH_TYPE = spinand
UBI_MLC_TYPE = 0
PHY_TEST = no
#overwrite CIS(BL0,BL1,UBOOT) PBAs
CIS_PBAs = 0 0 0
CIS_COPIES = 5
USR_MOUNT_BLOCKS:= misc
ENV_CFG = /dev/mtd2 0 0x20000 0x20000
FLASH_BLK_SIZE = 0x20000
FLASH_BLK_CNT = 1024
BLK_PB0_OFFSET = $(shell echo $$[$(cis$(PATSIZE))/$(FLASH_BLK_SIZE)])
BLK_PB1_OFFSET = $(shell echo $$[$(call sum, $(cis$(PATSIZE)) $(boot$(PATSIZE)))/$(FLASH_BLK_SIZE)])

# ISP 
ISP_API_DAY0                     = isp_api_day0.bin
ISP_API_NIGHT0                   = isp_api_night0.bin
ISP_API_COLORNIGHT0              = isp_api_colornight0.bin
ISP_IQ0                          = isp_iq0.bin
ISP_AWB0                         = isp_awb_cali0.data
ISP_ALSC0                        = isp_alsc_cali0.data

ISP_API_DAY1                     = isp_api_day1.bin
ISP_API_NIGHT1                   = isp_api_night1.bin
ISP_API_COLORNIGHT1              = isp_api_colornight1.bin
ISP_IQ1                          = isp_iq1.bin
ISP_AWB1                         = isp_awb_cali1.data
ISP_ALSC1                        = isp_alsc_cali1.data
MTDPARTS   = "mtdparts=nand0:$(cis$(MTDPART)),$(boot$(MTDPART)),$(cis$(SYSTAB))"

cis$(RESOUCE) = $(IMAGEDIR)/cis.bin
cis$(PATSIZE) = $(call multiplyhex, $(FLASH_BLK_SIZE), 10)
cis$(BOOTTAB0) = $(cis$(PATSIZE))(CIS),$(ipl$(MTDPART)),$(ipl_cust$(MTDPART)),$(uboot$(MTDPART))
cis$(BOOTTAB1) = $(ipl$(MTDPART)),$(ipl_cust$(MTDPART)),$(uboot$(MTDPART))
cis$(SYSTAB) = 0x60000(ENV),$(misc$(MTDPART)),$(rtos$(MTDPART)),-(UBI)
cis$(MTDPART) = $(cis$(PATSIZE))(CIS)

ipl$(RESOUCE) = $(PROJ_ROOT)/board/$(CHIP)/boot-rtos/$(FLASH_TYPE)/ipl/IPL.bin
ipl$(DATASIZE) = $(FLASH_BLK_SIZE)
ipl$(COPIES) = 3
ipl$(PATSIZE) = $(call multiplyhex, $(ipl$(COPIES)), $(ipl$(DATASIZE)))
ipl$(MTDPART) = $(ipl$(PATSIZE))(IPL)

ipl_cust$(RESOUCE) = $(PROJ_ROOT)/board/$(CHIP)/boot-rtos/$(FLASH_TYPE)/ipl/IPL_CUST.bin
ipl_cust$(DATASIZE) = $(FLASH_BLK_SIZE)
ipl_cust$(COPIES) = 3
ipl_cust$(PATSIZE) = $(call multiplyhex, $(ipl_cust$(COPIES)), $(ipl_cust$(DATASIZE)))
ipl_cust$(MTDPART) = $(ipl_cust$(PATSIZE))(IPL_CUST)

uboot$(RESOUCE) = $(PROJ_ROOT)/board/$(CHIP)/boot-rtos/$(FLASH_TYPE)/uboot/u-boot_$(FLASH_TYPE).xz.img.bin
#uboot$(DATASIZE) = $(call alignup, $(call filesize, $(uboot$(RESOUCE))), $(FLASH_BLK_SIZE))
uboot$(DATASIZE) = 0x40000
uboot$(COPIES) = 1
uboot$(PATSIZE) = $(call sum, $(uboot$(DATASIZE)) $(call multiplyhex, $(FLASH_BLK_SIZE), 4))
uboot$(MTDPART) =$(uboot$(PATSIZE))(UBOOT)
#UBOOT partition_sz=alignup(uboot_file_size, flash_block_size) + flash_block_size * 4
#UBOOT partition must have 4 blocks gap for ONE_BIN bad block use after uboot data.

boot$(RESOUCE) = $(IMAGEDIR)/boot.bin
boot$(PATSIZE) = $(call sum, $(ipl$(PATSIZE)) $(ipl_cust$(PATSIZE)) $(uboot$(PATSIZE)))
boot$(MTDPART) = $(boot$(PATSIZE))(BOOT0),$(boot$(PATSIZE))(BOOT1)
boot$(OTABLK) = /dev/mtd0 /dev/mtd1



misc$(RESOUCE) =  $(OUTPUTDIR)/misc
misc$(PATSIZE) = 0x200000
misc$(FSTYPE) = fwfs
misc$(MOUNTTG) = /misc
misc$(OPTIONS) = rw
misc$(MOUNTPT) = /dev/mtd6
misc$(MTDPART) = $(misc$(PATSIZE))(MISC)
misc$(OTABLK) = /dev/mtd6

rtos$(RESOUCE)     = $(PROJ_ROOT)/board/$(CHIP)/rtos/$(RTOS_BIN)
rtos$(PATSIZE)     = 0x200000
rtos$(BOOTCMD)   = nand read.e $(RTOSBOOTADDR) RTOS $(rtos$(PATSIZE))\;
rtos$(MTDPART)     = $(rtos$(PATSIZE))(RTOS),$(rtos$(PATSIZE))(RTOS_BACKUP)
