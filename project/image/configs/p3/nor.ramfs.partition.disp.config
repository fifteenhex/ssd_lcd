BOOT_IMAGE_LIST = ipl cis ipl_cust uboot
IMAGE_LIST = boot kernel rootfs misc miservice customer appconfigs
OTA_IMAGE_LIST = boot kernel misc miservice customer appconfigs
FLASH_TYPE = nor
BOOT_TYPE = fastboot
BENCH = no
PHY_TEST = no

INITRAMFSLOADADDR  = 0x21000000
USR_MOUNT_BLOCKS:= misc miservice customer appconfigs
ENV_TYPE = dualenv
ENV_CFG = /dev/mtd1 0 0x1000 0x1000 1
ENV1_CFG = /dev/mtd2 0 0x1000 0x1000 1
FLASH_BLK_SIZE = 0x10000
FLASH_BLK_CNT = 256

ifeq ($(IS_DEMO_BOARD), 1)
bootlogocmd = gpio out 7 1 \;gpio out 8 1 \;bootlogo 0 0 0 0 \;
else
bootlogocmd = bootlogo 0 0 0 0\;
endif
MTDPARTS = "mtdparts=nor0:$(boot$(MTDPART)),$(cis$(SYSTAB))"

cis$(RESOUCE) = $(IMAGEDIR)/cis.bin
cis$(DATASIZE) = 0x6000
cis$(COPIES) = 1
cis$(PATSIZE) = $(cis$(DATASIZE))
cis$(BOOTTAB0) = $(ipl$(MTDPART)),$(cis$(PATSIZE))(CIS),$(ipl_cust$(MTDPART)),$(uboot$(MTDPART)),0x1000@$(boot$(PATSIZE))(ENV),0x1000(ENV1)
cis$(SYSTAB) = $(kernel$(MTDPART)),$(rootfs$(MTDPART)),$(misc$(MTDPART)),$(miservice$(MTDPART)),$(customer$(MTDPART)),$(appconfigs$(MTDPART))

ipl$(RESOUCE) = $(PROJ_ROOT)/board/$(CHIP)/boot/$(FLASH_TYPE)/ipl/$(BOOT_TYPE)/IPL.bin
ipl$(DATASIZE) = $(call alignup, $(call filesize, $(ipl$(RESOUCE))), $(FLASH_PG_SIZE))
ipl$(COPIES) = 1
ipl$(PATSIZE) = $(ipl$(DATASIZE))
ipl$(MTDPART) = $(ipl$(PATSIZE))(IPL)

ipl_cust$(RESOUCE) = $(PROJ_ROOT)/board/$(CHIP)/boot/$(FLASH_TYPE)/ipl/$(BOOT_TYPE)/IPL_CUST.bin
ipl_cust$(DATASIZE) = $(call alignup, $(call filesize, $(ipl_cust$(RESOUCE))), $(FLASH_PG_SIZE))
ipl_cust$(COPIES) = 1
ipl_cust$(PATSIZE) = $(ipl_cust$(DATASIZE))
ipl_cust$(MTDPART) = $(ipl_cust$(PATSIZE))(IPL_CUST)

uboot$(RESOUCE) = $(PROJ_ROOT)/board/$(CHIP)/boot/$(FLASH_TYPE)/uboot/u-boot_dualenv.xz.img.bin
uboot$(DATASIZE) = $(call alignup, $(call filesize, $(uboot$(RESOUCE))), $(FLASH_PG_SIZE))
uboot$(COPIES) = 1
uboot$(PATSIZE) = $(uboot$(DATASIZE))
uboot$(MTDPART) = $(uboot$(PATSIZE))(UBOOT)

boot$(RESOUCE) = $(IMAGEDIR)/boot.bin
boot$(PATSIZE) = 0x5E000
boot$(MTDPART) = $(boot$(PATSIZE))(BOOT0),0x1000(ENV),0x1000(ENV1)
boot$(OTABLK) = /dev/mtdblock0

ifeq ($(FPGA), 1)
KERNEL_IMAGE = Image
else
KERNEL_IMAGE = uImage.mz
endif

kernel$(RESOUCE)   = $(PROJ_ROOT)/kbuild/$(KERNEL_VERSION)/arch/arm/boot/uImage.mz
kernel$(PATSIZE)   = 0x250000
kernel$(BOOTENV)   = $(KERNEL_BOOT_ENV) loglevel=0
kernel$(BOOTCMD)   = sf probe 0\;sf read $(KERNELBOOTADDR) KERNEL $(kernel$(PATSIZE))\;
kernel$(MTDPART) = $(kernel$(PATSIZE))(KERNEL)
kernel$(OTABLK) = /dev/mtdblock3

rootfs$(RESOUCE)   = $(OUTPUTDIR)/rootfs
rootfs$(FSTYPE)    = ramfs
rootfs$(PATSIZE)   = 0x570000
rootfs$(BOOTENV)   = rootfstype=ramfs initrd=$(INITRAMFSLOADADDR),$(rootfs$(PATSIZE))
rootfs$(BOOTCMD)   = sf read $(INITRAMFSLOADADDR) rootfs \$${rootfs_file_size}\;
rootfs$(MTDPART) = $(rootfs$(PATSIZE))(rootfs)
rootfs$(BLKENV)    := rootfs_file_size $$(printf 0x%x `stat -c "%s" $(IMAGEDIR)/rootfs.ramfs`)

misc$(RESOUCE) = $(OUTPUTDIR)/misc
misc$(FSTYPE) = fwfs
misc$(PATSIZE) = 0x80000
misc$(MOUNTTG) = /misc
misc$(MOUNTPT) = /dev/mtd5
misc$(OPTIONS) = rw
misc$(MTDPART) = $(misc$(PATSIZE))(MISC)
misc$(OTABLK) = /dev/mtdblock5

miservice$(RESOUCE)   = $(OUTPUTDIR)/miservice/config
miservice$(FSTYPE)    = squashfs
miservice$(PATSIZE)   = 0x480000
miservice$(MOUNTTG)  = /config
miservice$(MOUNTPT)  = /dev/mtdblock6
miservice$(OPTIONS)   = ro
miservice$(MTDPART) = $(miservice$(PATSIZE))(miservice)
miservice$(OTABLK) = /dev/mtdblock6

customer$(RESOUCE)   = $(OUTPUTDIR)/customer
customer$(FSTYPE)    = jffs2
customer$(PATSIZE)   = 0x280000
customer$(MOUNTTG)  = /customer
customer$(MOUNTPT)  = mtd:customer
customer$(OPTIONS)   = rw
customer$(MTDPART) = $(customer$(PATSIZE))(customer)
customer$(OTABLK) = /dev/mtdblock7

appconfigs$(RESOUCE)   = $(OUTPUTDIR)/appconfigs
appconfigs$(FSTYPE)    = jffs2
appconfigs$(PATSIZE)   = 0x60000
appconfigs$(MOUNTTG)   = /appconfigs
appconfigs$(MOUNTPT)   = mtd:appconfigs
appconfigs$(OPTIONS)   = rw
appconfigs$(MTDPART) = $(appconfigs$(PATSIZE))(appconfigs)
appconfigs$(OTABLK) = /dev/mtdblock8

