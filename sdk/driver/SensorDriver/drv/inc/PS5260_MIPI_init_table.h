/* SigmaStar trade secret */
/* Copyright (c) [2019~2020] SigmaStar Technology.
All rights reserved.

Unless otherwise stipulated in writing, any and all information contained
herein regardless in any format shall remain the sole proprietary of
SigmaStar and be kept in strict confidence
(SigmaStar Confidential Information) by the recipient.
Any unauthorized act including without limitation unauthorized disclosure,
copying, use, reproduction, sale, distribution, modification, disassembling,
reverse engineering and compiling of the contents of SigmaStar Confidential
Information is unlawful and strictly prohibited. SigmaStar hereby reserves the
rights to any and all damages, losses, costs and expenses resulting therefrom.
*/

#ifndef _PS5260_MIPI_INIT_TABLE_H_
#define _PS5260_MIPI_INIT_TABLE_H_

static SENSOR_INIT_TABLE Sensor_init_table[] __attribute__((aligned(8)))=
{
#if defined(SENSOR_INIT_CMDQ_MODE)
        /*set cmdq0 busy*/
        CMDQ_REG_DUMMY(CMDQ_STATUS_BUSY),
        VIF_REG_DUMMY(CMDQ_STATUS_BUSY),

        /*sensor reset*/
        SNR_PDWN(0),                   //pdwn low
        CMDQ_DELAY_10US(10),           //T1, delay 100us
        SNR_RST(0),                    //reset low
        CMDQ_DELAY_MS(1),              //T3, delay 1ms
        SNR_RST(1),                    //reset high
        CMDQ_DELAY_10US(10),           //T2, delay 100us
        SNR_MCLK_EN(0x7),              //MCLK 24MhZ
        CMDQ_DELAY_MS(3),              //t4, delay 3ms

        /*I2C timing*/
        I2CM_CLK_EN(0x2),  //12MHz
        /*
        I2CM_REGW(reg_lcnt,16),
        I2CM_REGW(reg_hcnt,11),
        I2CM_REGW(reg_start_cnt,50),
        I2CM_REGW(reg_stop_cnt,50),
        I2CM_REGW(reg_data_lat_cnt,0),
        I2CM_REGW(reg_sda_cnt,11),
        */
        I2CM_PARAM(16,11,50,50,0,11),
#endif

        I2CM_1A1D_W(0x90, 0xEF, 0x05),//bank 5
        I2CM_1A1D_W(0x90, 0x0F, 0x00),
        I2CM_1A1D_W(0x90, 0x44, 0x00),//T_pll_enh=0
        I2CM_1A1D_W(0x90, 0x43, 0x02),//T_MIPI_sel=1
        I2CM_1A1D_W(0x90, 0xED, 0x01),
        I2CM_1A1D_W(0x90, 0xEF, 0x01),//bank 1
        I2CM_1A1D_W(0x90, 0xF5, 0x01),
        I2CM_1A1D_W(0x90, 0x09, 0x01),
        I2CM_1A1D_W(0x90, 0xEF, 0x00),//bank 0
        I2CM_1A1D_W(0x90, 0x10, 0x80),//Cmd_BYTECLK_InvSel=0 for PS308
        I2CM_1A1D_W(0x90, 0x11, 0x80),//GatedAllClk enable
        I2CM_1A1D_W(0x90, 0x13, 0x01),
        I2CM_1A1D_W(0x90, 0x16, 0xBC),
        I2CM_1A1D_W(0x90, 0x38, 0x28),
        I2CM_1A1D_W(0x90, 0x3C, 0x02),
        I2CM_1A1D_W(0x90, 0x5F, 0x64),
        I2CM_1A1D_W(0x90, 0x61, 0xDA),
        I2CM_1A1D_W(0x90, 0x62, 0x14),
        I2CM_1A1D_W(0x90, 0x69, 0x10),
        I2CM_1A1D_W(0x90, 0x75, 0x0B),
        I2CM_1A1D_W(0x90, 0x77, 0x06),
        I2CM_1A1D_W(0x90, 0x7E, 0x19),
        I2CM_1A1D_W(0x90, 0x85, 0x88),
        I2CM_1A1D_W(0x90, 0x9E, 0x00),
        I2CM_1A1D_W(0x90, 0xA0, 0x01),
        I2CM_1A1D_W(0x90, 0xA2, 0x09),
        I2CM_1A1D_W(0x90, 0xBE, 0x05),
        I2CM_1A1D_W(0x90, 0xBF, 0x80),
        I2CM_1A1D_W(0x90, 0xDF, 0x1E),
        I2CM_1A1D_W(0x90, 0xE1, 0x05),
        I2CM_1A1D_W(0x90, 0xE2, 0x03),
        I2CM_1A1D_W(0x90, 0xE3, 0x20),
        I2CM_1A1D_W(0x90, 0xE4, 0x0F),
        I2CM_1A1D_W(0x90, 0xE5, 0x07),
        I2CM_1A1D_W(0x90, 0xE6, 0x05),
        I2CM_1A1D_W(0x90, 0xF3, 0xB1),//B17A: Version
        I2CM_1A1D_W(0x90, 0xF8, 0x7A),//B17A: Version
        I2CM_1A1D_W(0x90, 0xED, 0x01),
        I2CM_1A1D_W(0x90, 0xEF, 0x01),//bank 1
        I2CM_1A1D_W(0x90, 0x05, 0x0B),
        I2CM_1A1D_W(0x90, 0x07, 0x01),
        I2CM_1A1D_W(0x90, 0x08, 0x46),
        I2CM_1A1D_W(0x90, 0x0A, 0x04),
        I2CM_1A1D_W(0x90, 0x0B, 0x64),
        I2CM_1A1D_W(0x90, 0x0C, 0x00),
        I2CM_1A1D_W(0x90, 0x0D, 0x03),
        I2CM_1A1D_W(0x90, 0x0E, 0x11),
        I2CM_1A1D_W(0x90, 0x0F, 0x34),
        I2CM_1A1D_W(0x90, 0x18, 0x01),
        I2CM_1A1D_W(0x90, 0x19, 0x23),
        I2CM_1A1D_W(0x90, 0x27, 0x11),
        I2CM_1A1D_W(0x90, 0x28, 0x98),
        I2CM_1A1D_W(0x90, 0x2A, 0x3C),
        I2CM_1A1D_W(0x90, 0x37, 0x90),
        I2CM_1A1D_W(0x90, 0x3A, 0xF0),
        I2CM_1A1D_W(0x90, 0x3B, 0x20),
        I2CM_1A1D_W(0x90, 0x40, 0xF0),
        I2CM_1A1D_W(0x90, 0x42, 0xD6),
        I2CM_1A1D_W(0x90, 0x43, 0x20),
        I2CM_1A1D_W(0x90, 0x5C, 0x1E),
        I2CM_1A1D_W(0x90, 0x5D, 0x0A),
        I2CM_1A1D_W(0x90, 0x5E, 0x32),
        I2CM_1A1D_W(0x90, 0x67, 0x11),
        I2CM_1A1D_W(0x90, 0x68, 0xF4),
        I2CM_1A1D_W(0x90, 0x69, 0xC2),
        I2CM_1A1D_W(0x90, 0x75, 0x3C),
        I2CM_1A1D_W(0x90, 0x7B, 0x08),
        I2CM_1A1D_W(0x90, 0x7C, 0x08),
        I2CM_1A1D_W(0x90, 0x7D, 0x02),
        I2CM_1A1D_W(0x90, 0x83, 0x02),
        I2CM_1A1D_W(0x90, 0x8F, 0x07),
        I2CM_1A1D_W(0x90, 0x90, 0x01),
        I2CM_1A1D_W(0x90, 0x92, 0x80),
        I2CM_1A1D_W(0x90, 0xA3, 0x00),
        I2CM_1A1D_W(0x90, 0xA4, 0x0E),
        I2CM_1A1D_W(0x90, 0xA5, 0x04),
        I2CM_1A1D_W(0x90, 0xA6, 0x40),
        I2CM_1A1D_W(0x90, 0xA7, 0x00),
        I2CM_1A1D_W(0x90, 0xA8, 0x00),
        I2CM_1A1D_W(0x90, 0xA9, 0x07),
        I2CM_1A1D_W(0x90, 0xAA, 0x88),
        I2CM_1A1D_W(0x90, 0xAB, 0x01),
        I2CM_1A1D_W(0x90, 0xAE, 0x28),
        I2CM_1A1D_W(0x90, 0xB0, 0x28),
        I2CM_1A1D_W(0x90, 0xB3, 0x0A),
        I2CM_1A1D_W(0x90, 0xB6, 0x11),
        I2CM_1A1D_W(0x90, 0xB7, 0x34),
        I2CM_1A1D_W(0x90, 0xBE, 0x00),
        I2CM_1A1D_W(0x90, 0xBF, 0x00),
        I2CM_1A1D_W(0x90, 0xC0, 0x00),
        I2CM_1A1D_W(0x90, 0xC1, 0x00),
        I2CM_1A1D_W(0x90, 0xC4, 0x60),
        I2CM_1A1D_W(0x90, 0xC6, 0x60),
        I2CM_1A1D_W(0x90, 0xC7, 0x0A),
        I2CM_1A1D_W(0x90, 0xC8, 0xC8),
        I2CM_1A1D_W(0x90, 0xC9, 0x35),
        I2CM_1A1D_W(0x90, 0xCE, 0x6C),
        I2CM_1A1D_W(0x90, 0xCF, 0x82),
        I2CM_1A1D_W(0x90, 0xD0, 0x02),
        I2CM_1A1D_W(0x90, 0xD1, 0x60),
        I2CM_1A1D_W(0x90, 0xD5, 0x49),
        I2CM_1A1D_W(0x90, 0xD7, 0x0A),
        I2CM_1A1D_W(0x90, 0xD8, 0xC8),
        I2CM_1A1D_W(0x90, 0xDA, 0xC0),
        I2CM_1A1D_W(0x90, 0xDD, 0x42),
        I2CM_1A1D_W(0x90, 0xDE, 0x43),
        I2CM_1A1D_W(0x90, 0xE2, 0x9A),
        I2CM_1A1D_W(0x90, 0xE4, 0x00),
        I2CM_1A1D_W(0x90, 0xF0, 0x7C),
        I2CM_1A1D_W(0x90, 0xF1, 0x16),
        I2CM_1A1D_W(0x90, 0xF2, 0x24),
        I2CM_1A1D_W(0x90, 0xF3, 0x0C),
        I2CM_1A1D_W(0x90, 0xF4, 0x01),
        I2CM_1A1D_W(0x90, 0xF5, 0x19),
        I2CM_1A1D_W(0x90, 0xF6, 0x16),
        I2CM_1A1D_W(0x90, 0xF7, 0x00),
        I2CM_1A1D_W(0x90, 0xF8, 0x48),
        I2CM_1A1D_W(0x90, 0xF9, 0x05),
        I2CM_1A1D_W(0x90, 0xFA, 0x55),
#if 1 //defined(SENSOR_INIT_CMDQ_MODE)
        I2CM_1A1D_W( 0x90, 0xEF ,0x01),         //bank 1
        /*Sensor runtime parameter*/
        SNR_SHUTTER_FPS_1A1D( 0x90, 10000, 30000),   //shutter 10ms , fps 30
        SNR_GAIN_1A1D( 0x90, 1024),                  //gain = 1x
        I2CM_1A1D_W( 0x90, 0x09 ,0x01),         //trigger update
#endif
        I2CM_1A1D_W(0x90, 0x09, 0x01),
        I2CM_1A1D_W(0x90, 0xEF, 0x02),//bank 2
        I2CM_1A1D_W(0x90, 0x2E, 0x0C),
        I2CM_1A1D_W(0x90, 0x33, 0x8C),
        I2CM_1A1D_W(0x90, 0x3C, 0xC8),
        I2CM_1A1D_W(0x90, 0x4E, 0x02),
        I2CM_1A1D_W(0x90, 0xB0, 0x81),
        I2CM_1A1D_W(0x90, 0xED, 0x01),
        I2CM_1A1D_W(0x90, 0xEF, 0x05),//bank 5
        I2CM_1A1D_W(0x90, 0x06, 0x06),
        I2CM_1A1D_W(0x90, 0x09, 0x09),
        I2CM_1A1D_W(0x90, 0x0A, 0x05),
        I2CM_1A1D_W(0x90, 0x0B, 0x06),
        I2CM_1A1D_W(0x90, 0x0C, 0x04),
        I2CM_1A1D_W(0x90, 0x0D, 0x5E),
        I2CM_1A1D_W(0x90, 0x0E, 0x01),
        I2CM_1A1D_W(0x90, 0x0F, 0x00),//MIPI CSI disable
        I2CM_1A1D_W(0x90, 0x10, 0x02),
        I2CM_1A1D_W(0x90, 0x11, 0x01),
        I2CM_1A1D_W(0x90, 0x15, 0x07),
        I2CM_1A1D_W(0x90, 0x17, 0x05),
        I2CM_1A1D_W(0x90, 0x18, 0x03),
        I2CM_1A1D_W(0x90, 0x1B, 0x03),
        I2CM_1A1D_W(0x90, 0x1C, 0x04),
        I2CM_1A1D_W(0x90, 0x25, 0x01), //B17A
        I2CM_1A1D_W(0x90, 0x40, 0x16),
        I2CM_1A1D_W(0x90, 0x41, 0x1A),
        I2CM_1A1D_W(0x90, 0x43, 0x02),//T_MIPI_sel[0], Bank5_67[1]=1
        I2CM_1A1D_W(0x90, 0x44, 0x01),//MIPI PLL enable
        I2CM_1A1D_W(0x90, 0x4A, 0x02),
        I2CM_1A1D_W(0x90, 0x4F, 0x01),
        I2CM_1A1D_W(0x90, 0x5B, 0x10),
        I2CM_1A1D_W(0x90, 0x94, 0x04),
        I2CM_1A1D_W(0x90, 0xB1, 0x00),
        I2CM_1A1D_W(0x90, 0xED, 0x01),
        I2CM_1A1D_W(0x90, 0xEF, 0x06),//bank 6
        I2CM_1A1D_W(0x90, 0x00, 0x0C),
        I2CM_1A1D_W(0x90, 0x02, 0x13),
        I2CM_1A1D_W(0x90, 0x06, 0x02),
        I2CM_1A1D_W(0x90, 0x07, 0x02),
        I2CM_1A1D_W(0x90, 0x08, 0x02),
        I2CM_1A1D_W(0x90, 0x09, 0x02),
        I2CM_1A1D_W(0x90, 0x0F, 0x12),
        I2CM_1A1D_W(0x90, 0x10, 0x6C),
        I2CM_1A1D_W(0x90, 0x11, 0x12),
        I2CM_1A1D_W(0x90, 0x12, 0x6C),
        I2CM_1A1D_W(0x90, 0x18, 0x26),
        I2CM_1A1D_W(0x90, 0x1A, 0x26),
        I2CM_1A1D_W(0x90, 0x28, 0x00),
        I2CM_1A1D_W(0x90, 0x2D, 0x00),
        I2CM_1A1D_W(0x90, 0x2E, 0x6C),
        I2CM_1A1D_W(0x90, 0x2F, 0x6C),
        I2CM_1A1D_W(0x90, 0x4A, 0x26),
        I2CM_1A1D_W(0x90, 0x4B, 0x26),
        I2CM_1A1D_W(0x90, 0x9E, 0x80),
        I2CM_1A1D_W(0x90, 0xDF, 0x04),
        I2CM_1A1D_W(0x90, 0xED, 0x01),
        I2CM_1A1D_W(0x90, 0xEF, 0x00),//bank 0
        I2CM_1A1D_W(0x90, 0x11, 0x00),//GatedAllClk disable
        I2CM_1A1D_W(0x90, 0xEF, 0x05),//bank 5
        I2CM_1A1D_W(0x90, 0x3B, 0x00),//R_Cmd_Gated_MIPI_Clk=0
        I2CM_1A1D_W(0x90, 0xED, 0x01),
        I2CM_1A1D_W(0x90, 0xEF, 0x01),//bank 1
        I2CM_1A1D_W(0x90, 0x02, 0xFB),//ResetTG
        I2CM_1A1D_W(0x90, 0x09, 0x01),
        I2CM_1A1D_W(0x90, 0xEF, 0x05),
        I2CM_1A1D_W(0x90, 0x0F, 0x01),//MIPI CSI enable
        I2CM_1A1D_W(0x90, 0xED, 0x01),
        I2CM_1A1D_W(0x90, 0xDL, 0x10),//B17A, Delay time need bigger than Vblanking interval
        I2CM_1A1D_W(0x90, 0x25, 0x00),//B17A

#if defined(SENSOR_INIT_CMDQ_MODE)
        /*set cmdq0 idle*/
        CMDQ_REG_DUMMY(CMDQ_STATUS_READY),
        VIF_REG_DUMMY(CMDQ_STATUS_READY),

        /*append dummy*/
        //CMDQ_TAG('EOT'),    //end of table
        CMDQ_NULL(),
        CMDQ_NULL(),
        CMDQ_NULL(),
        CMDQ_NULL(),
#endif
};

#endif
