/* SigmaStar trade secret */
/* Copyright (c) [2019~2020] SigmaStar Technology.
All rights reserved.

Unless otherwise stipulated in writing, any and all information contained
herein regardless in any format shall remain the sole proprietary of
SigmaStar and be kept in strict confidence
(SigmaStar Confidential Information) by the recipient.
Any unauthorized act including without limitation unauthorized disclosure,
copying, use, reproduction, sale, distribution, modification, disassembling,
reverse engineering and compiling of the contents of SigmaStar Confidential
Information is unlawful and strictly prohibited. SigmaStar hereby reserves the
rights to any and all damages, losses, costs and expenses resulting therefrom.
*/

#ifndef _PS5520_MIPI_INIT_TABLE_H_

#ifndef _PS5520_SNR_SETTING_
#define _PS5520_SNR_SETTING_ 0
#endif

static SENSOR_INIT_TABLE Sensor_init_table[] __attribute__((aligned(8)))=
{
#if defined(SENSOR_INIT_CMDQ_MODE)
    /*set cmdq0 busy*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_BUSY),
    VIF_REG_DUMMY(CMDQ_STATUS_BUSY),

    /*sensor reset*/
    SNR_PDWN(0),                   //pdwn low
    CMDQ_DELAY_10US(10),           //T1, delay 100us
    SNR_RST(0),                    //reset low
    CMDQ_DELAY_MS(1),              //T3, delay 1ms
    SNR_RST(1),                    //reset high
    CMDQ_DELAY_10US(10),           //T2, delay 100us
    SNR_MCLK_EN(0x7),              //MCLK 24MhZ
    CMDQ_DELAY_MS(3),              //t4, delay 3ms

    /*I2C timing*/
    I2CM_CLK_EN(0x2),  //12MHz
    /*
    I2CM_REGW(reg_lcnt,16),
    I2CM_REGW(reg_hcnt,11),
    I2CM_REGW(reg_start_cnt,50),
    I2CM_REGW(reg_stop_cnt,50),
    I2CM_REGW(reg_data_lat_cnt,0),
    I2CM_REGW(reg_sda_cnt,11),
    */
    I2CM_PARAM(16,11,50,50,0,11),
#endif

#if (_PS5520_SNR_SETTING_ == 0)

#if 0// 2592x1944@15fps
    I2CM_1A1D_W( 0x90, 0xEF, 0x05),
    I2CM_1A1D_W( 0x90, 0x0F, 0x00),
    I2CM_1A1D_W( 0x90, 0x43, 0x02),
    I2CM_1A1D_W( 0x90, 0x44, 0x00), //T_pll_enh=0
    I2CM_1A1D_W( 0x90, 0xED, 0x01),
    I2CM_1A1D_W( 0x90, 0xEF, 0x01),
    I2CM_1A1D_W( 0x90, 0xF5, 0x01),
    I2CM_1A1D_W( 0x90, 0x09, 0x01),
    I2CM_1A1D_W( 0x90, 0xEF, 0x00),
    I2CM_1A1D_W( 0x90, 0x10, 0x80), //Cmd_BYTECLK_InvSel=0 for PS308
    I2CM_1A1D_W( 0x90, 0x11, 0x80), //GatedAllClk enable
    I2CM_1A1D_W( 0x90, 0x35, 0x01),
    I2CM_1A1D_W( 0x90, 0x36, 0x1E), //0F
    I2CM_1A1D_W( 0x90, 0x37, 0x1E), //0F
    I2CM_1A1D_W( 0x90, 0x38, 0xE0),
    I2CM_1A1D_W( 0x90, 0x5F, 0x90), //C2
    I2CM_1A1D_W( 0x90, 0x60, 0x2A), //black inversion 20190603
    I2CM_1A1D_W( 0x90, 0x61, 0xE4), //54
    I2CM_1A1D_W( 0x90, 0x62, 0x39), //29
    I2CM_1A1D_W( 0x90, 0x69, 0x10),
    I2CM_1A1D_W( 0x90, 0x6A, 0x40),
    I2CM_1A1D_W( 0x90, 0x85, 0xB0), //22
    I2CM_1A1D_W( 0x90, 0x98, 0x02),
    I2CM_1A1D_W( 0x90, 0x9E, 0x00),
    I2CM_1A1D_W( 0x90, 0xA0, 0x02),
    I2CM_1A1D_W( 0x90, 0xA2, 0x0A),
    I2CM_1A1D_W( 0x90, 0xD8, 0x10),
    I2CM_1A1D_W( 0x90, 0xDF, 0x24),
    I2CM_1A1D_W( 0x90, 0xE2, 0x05),
    I2CM_1A1D_W( 0x90, 0xE3, 0x24),
    I2CM_1A1D_W( 0x90, 0xE6, 0x05),
    I2CM_1A1D_W( 0x90, 0xF3, 0xB0), //B03A: Version
    I2CM_1A1D_W( 0x90, 0xF8, 0x3A), //B03A: Version
    I2CM_1A1D_W( 0x90, 0xED, 0x01),
    I2CM_1A1D_W( 0x90, 0xEF, 0x01),
    I2CM_1A1D_W( 0x90, 0x05, 0x0B),
    I2CM_1A1D_W( 0x90, 0x0A, 0x07),
    I2CM_1A1D_W( 0x90, 0x0B, 0xBB),
    I2CM_1A1D_W( 0x90, 0x0D, 0x03),
    I2CM_1A1D_W( 0x90, 0x20, 0x0A),
    I2CM_1A1D_W( 0x90, 0x27, 0x0A),
    I2CM_1A1D_W( 0x90, 0x28, 0x8C),
    I2CM_1A1D_W( 0x90, 0x2A, 0x74), //56
    I2CM_1A1D_W( 0x90, 0x37, 0xBA), //2C
    I2CM_1A1D_W( 0x90, 0x39, 0xC2), //36
    //B02A NoImasyn
    //3E 21
    //3F 32
    //40 F4
    //41 13
    //42 F4
    //43 FC
    I2CM_1A1D_W( 0x90, 0x3E, 0x21),
    I2CM_1A1D_W( 0x90, 0x3F, 0x32), //A6
    I2CM_1A1D_W( 0x90, 0x40, 0xD0), //03A=8C 02A=F4 reduce count R
    I2CM_1A1D_W( 0x90, 0x41, 0x13),
    I2CM_1A1D_W( 0x90, 0x42, 0xF4),
    I2CM_1A1D_W( 0x90, 0x43, 0xFC), //D6
    I2CM_1A1D_W( 0x90, 0x51, 0x28), //0A
    I2CM_1A1D_W( 0x90, 0x5C, 0x1E),
    I2CM_1A1D_W( 0x90, 0x5D, 0x0A),
    I2CM_1A1D_W( 0x90, 0x68, 0x00), //FA
    I2CM_1A1D_W( 0x90, 0x69, 0x00), //C8
    I2CM_1A1D_W( 0x90, 0x75, 0x74), //56
    I2CM_1A1D_W( 0x90, 0x8F, 0x08), //Image_syn off
    I2CM_1A1D_W( 0x90, 0xA8, 0x08),
    I2CM_1A1D_W( 0x90, 0xAB, 0x02),
    I2CM_1A1D_W( 0x90, 0xAE, 0x50),
    I2CM_1A1D_W( 0x90, 0xB0, 0x50),
    I2CM_1A1D_W( 0x90, 0xB3, 0x07),
    I2CM_1A1D_W( 0x90, 0xC4, 0x40), //54
    I2CM_1A1D_W( 0x90, 0xC6, 0x10),
    I2CM_1A1D_W( 0x90, 0xC9, 0x55),
    I2CM_1A1D_W( 0x90, 0xCE, 0x30),
    I2CM_1A1D_W( 0x90, 0xD0, 0x02),
    I2CM_1A1D_W( 0x90, 0xD1, 0x50), //increase comparator current
    I2CM_1A1D_W( 0x90, 0xD3, 0x01),
    I2CM_1A1D_W( 0x90, 0xD4, 0x04),
    I2CM_1A1D_W( 0x90, 0xD5, 0x61),
    I2CM_1A1D_W( 0x90, 0xD8, 0xA0),
    I2CM_1A1D_W( 0x90, 0xDD, 0x42),
    I2CM_1A1D_W( 0x90, 0xE2, 0x0A),
    I2CM_1A1D_W( 0x90, 0xF0, 0x9D), //8D
    I2CM_1A1D_W( 0x90, 0xF1, 0x16),
    I2CM_1A1D_W( 0x90, 0xF2, 0x26),
    I2CM_1A1D_W( 0x90, 0xF3, 0x0C),
    I2CM_1A1D_W( 0x90, 0xF5, 0x19),
    I2CM_1A1D_W( 0x90, 0x09, 0x01),
    I2CM_1A1D_W( 0x90, 0xEF, 0x02),
    I2CM_1A1D_W( 0x90, 0x2E, 0x04),
    I2CM_1A1D_W( 0x90, 0x33, 0x84),
    I2CM_1A1D_W( 0x90, 0x3C, 0xFA),
    I2CM_1A1D_W( 0x90, 0x4E, 0x02),
    I2CM_1A1D_W( 0x90, 0xED, 0x01),
    I2CM_1A1D_W( 0x90, 0xEF, 0x05),
    I2CM_1A1D_W( 0x90, 0x06, 0x64), //RAW10
    I2CM_1A1D_W( 0x90, 0x09, 0x09),
    I2CM_1A1D_W( 0x90, 0x0A, 0x05),
    I2CM_1A1D_W( 0x90, 0x0F, 0x00), //MIPI CSI disable
    I2CM_1A1D_W( 0x90, 0x10, 0x02),
    I2CM_1A1D_W( 0x90, 0x11, 0x01),
    I2CM_1A1D_W( 0x90, 0x15, 0x05),
    I2CM_1A1D_W( 0x90, 0x17, 0x03), //04->03 for CX3 platform
    I2CM_1A1D_W( 0x90, 0x18, 0x02),
    I2CM_1A1D_W( 0x90, 0x3B, 0x00),
    I2CM_1A1D_W( 0x90, 0x40, 0x16),
    I2CM_1A1D_W( 0x90, 0x41, 0x1B),
    I2CM_1A1D_W( 0x90, 0x43, 0x02),
    I2CM_1A1D_W( 0x90, 0x44, 0x01),
    I2CM_1A1D_W( 0x90, 0x49, 0x01),
    I2CM_1A1D_W( 0x90, 0x4F, 0x01),
    I2CM_1A1D_W( 0x90, 0x5B, 0x10), //Mipi frame reset by Vsync
    I2CM_1A1D_W( 0x90, 0x94, 0x04),
    I2CM_1A1D_W( 0x90, 0xED, 0x01),
    I2CM_1A1D_W( 0x90, 0xEF, 0x06),
    I2CM_1A1D_W( 0x90, 0x00, 0x0C),
    I2CM_1A1D_W( 0x90, 0x02, 0x13),
    I2CM_1A1D_W( 0x90, 0x06, 0x02),
    I2CM_1A1D_W( 0x90, 0x09, 0x02),
    I2CM_1A1D_W( 0x90, 0x0A, 0x15),
    I2CM_1A1D_W( 0x90, 0x0B, 0x90),
    I2CM_1A1D_W( 0x90, 0x0C, 0x90),
    I2CM_1A1D_W( 0x90, 0x0D, 0x90),
    I2CM_1A1D_W( 0x90, 0x0F, 0x1B),
    I2CM_1A1D_W( 0x90, 0x10, 0x20),
    I2CM_1A1D_W( 0x90, 0x11, 0x1B),
    I2CM_1A1D_W( 0x90, 0x12, 0x20),
    I2CM_1A1D_W( 0x90, 0x18, 0x40),
    I2CM_1A1D_W( 0x90, 0x1A, 0x40),
    I2CM_1A1D_W( 0x90, 0x28, 0x03),
    I2CM_1A1D_W( 0x90, 0x2B, 0x20),
    I2CM_1A1D_W( 0x90, 0x2D, 0x00),
    I2CM_1A1D_W( 0x90, 0x2E, 0x20),
    I2CM_1A1D_W( 0x90, 0x2F, 0x20),
    I2CM_1A1D_W( 0x90, 0x4A, 0x40),
    I2CM_1A1D_W( 0x90, 0x4B, 0x40),
    I2CM_1A1D_W( 0x90, 0x98, 0x06), //LTM Off
    I2CM_1A1D_W( 0x90, 0x99, 0x23),
    I2CM_1A1D_W( 0x90, 0x9E, 0x42),
    I2CM_1A1D_W( 0x90, 0x9F, 0x44), // Cmd_LTM_LThd[4:0]=8
    I2CM_1A1D_W( 0x90, 0xF1, 0x01),
    I2CM_1A1D_W( 0x90, 0xEF, 0x05),
    I2CM_1A1D_W( 0x90, 0x3B, 0x00), //R_Cmd_Gated_MIPI_Clk=0
    I2CM_1A1D_W( 0x90, 0xED, 0x01),
    I2CM_1A1D_W( 0x90, 0xEF, 0x01),
    I2CM_1A1D_W( 0x90, 0x02, 0xFB), //ResetTG
    I2CM_1A1D_W( 0x90, 0x09, 0x01),
    I2CM_1A1D_W( 0x90, 0xEF, 0x00),
    I2CM_1A1D_W( 0x90, 0x11, 0x00), //GatedAllClk disable, this command move to before MIPI CSI enable(avoid LTM on display abnormal)
    I2CM_1A1D_W( 0x90, 0xEF, 0x05),
    I2CM_1A1D_W( 0x90, 0x0F, 0x01), //MIPI CSI enable
    I2CM_1A1D_W( 0x90, 0xED, 0x01),
#endif

#if 1 // 2608x1960@15fps
    I2CM_1A1D_W(0x90, 0xEF, 0x05),
    I2CM_1A1D_W(0x90, 0x0F, 0x00),
    I2CM_1A1D_W(0x90, 0x43, 0x02),
    I2CM_1A1D_W(0x90, 0x44, 0x00),//T_pll_enh=0
    I2CM_1A1D_W(0x90, 0xED, 0x01),
    I2CM_1A1D_W(0x90, 0xEF, 0x01),
    I2CM_1A1D_W(0x90, 0xF5, 0x01),
    I2CM_1A1D_W(0x90, 0x09, 0x01),
    I2CM_1A1D_W(0x90, 0xEF, 0x00),
    I2CM_1A1D_W(0x90, 0x10, 0x80),//Cmd_BYTECLK_InvSel=0 for PS308
    I2CM_1A1D_W(0x90, 0x11, 0x80),//GatedAllClk enable
    I2CM_1A1D_W(0x90, 0x35, 0x01),
    I2CM_1A1D_W(0x90, 0x36, 0x1E),
    I2CM_1A1D_W(0x90, 0x37, 0x1E),
    I2CM_1A1D_W(0x90, 0x38, 0xE0),
    I2CM_1A1D_W(0x90, 0x60, 0x58),
    I2CM_1A1D_W(0x90, 0x61, 0xE4),
    I2CM_1A1D_W(0x90, 0x62, 0x39),
    I2CM_1A1D_W(0x90, 0x69, 0x10),
    I2CM_1A1D_W(0x90, 0x6A, 0x40),
    I2CM_1A1D_W(0x90, 0x85, 0xB0),
    I2CM_1A1D_W(0x90, 0x98, 0x02),
    I2CM_1A1D_W(0x90, 0x9E, 0x00),
    I2CM_1A1D_W(0x90, 0xA0, 0x02),
    I2CM_1A1D_W(0x90, 0xA2, 0x0A),
    I2CM_1A1D_W(0x90, 0xD8, 0x10),
    I2CM_1A1D_W(0x90, 0xDF, 0x24),
    I2CM_1A1D_W(0x90, 0xE2, 0x05),
    I2CM_1A1D_W(0x90, 0xE3, 0x24),
    I2CM_1A1D_W(0x90, 0xE6, 0x05),
    I2CM_1A1D_W(0x90, 0xF3, 0xB0),//B04A: Version
    I2CM_1A1D_W(0x90, 0xF8, 0x4A),//B04A: Version
    I2CM_1A1D_W(0x90, 0xED, 0x01),
    I2CM_1A1D_W(0x90, 0xEF, 0x01),
    I2CM_1A1D_W(0x90, 0x05, 0x0B),
    I2CM_1A1D_W(0x90, 0x0D, 0x03),
    I2CM_1A1D_W(0x90, 0x2A, 0x74),
    I2CM_1A1D_W(0x90, 0x37, 0xBA),
    I2CM_1A1D_W(0x90, 0x39, 0xC2),
    I2CM_1A1D_W(0x90, 0x3E, 0x21),
    I2CM_1A1D_W(0x90, 0x3F, 0x32),
    I2CM_1A1D_W(0x90, 0x40, 0xC2),//B03A: F4->C2
    I2CM_1A1D_W(0x90, 0x41, 0x14),//B03A: 13->14
    I2CM_1A1D_W(0x90, 0x42, 0xF4),
    I2CM_1A1D_W(0x90, 0x43, 0x2E),//B03A: FC->2E
    I2CM_1A1D_W(0x90, 0x51, 0x28),
    I2CM_1A1D_W(0x90, 0x5C, 0x1E),
    I2CM_1A1D_W(0x90, 0x5D, 0x0A),
    I2CM_1A1D_W(0x90, 0x68, 0x00),
    I2CM_1A1D_W(0x90, 0x69, 0x00),
    I2CM_1A1D_W(0x90, 0x75, 0x74),
    I2CM_1A1D_W(0x90, 0x8F, 0x08),
    I2CM_1A1D_W(0x90, 0xA6, 0xA8),
    I2CM_1A1D_W(0x90, 0xAA, 0x30),
    I2CM_1A1D_W(0x90, 0xAB, 0x02),
    I2CM_1A1D_W(0x90, 0xAE, 0x50),
    I2CM_1A1D_W(0x90, 0xB0, 0x50),
    I2CM_1A1D_W(0x90, 0xB3, 0x07),
    I2CM_1A1D_W(0x90, 0xC6, 0x10),
    I2CM_1A1D_W(0x90, 0xC9, 0x55),
    I2CM_1A1D_W(0x90, 0xCE, 0x30),
    I2CM_1A1D_W(0x90, 0xD0, 0x02),
    I2CM_1A1D_W(0x90, 0xD1, 0x60),
    I2CM_1A1D_W(0x90, 0xD3, 0x01),
    I2CM_1A1D_W(0x90, 0xD4, 0x04),
    I2CM_1A1D_W(0x90, 0xD5, 0x61),
    I2CM_1A1D_W(0x90, 0xD8, 0xA0),
    I2CM_1A1D_W(0x90, 0xDD, 0x42),
    I2CM_1A1D_W(0x90, 0xE2, 0x0A),
    I2CM_1A1D_W(0x90, 0xF0, 0x9D),
    I2CM_1A1D_W(0x90, 0xF1, 0x16),
    I2CM_1A1D_W(0x90, 0xF2, 0x26),
    I2CM_1A1D_W(0x90, 0xF3, 0x0C),
    I2CM_1A1D_W(0x90, 0xF5, 0x19),
    I2CM_1A1D_W(0x90, 0x09, 0x01),
    I2CM_1A1D_W(0x90, 0xEF, 0x02),
    I2CM_1A1D_W(0x90, 0x2E, 0x04),
    I2CM_1A1D_W(0x90, 0x33, 0x84),
    I2CM_1A1D_W(0x90, 0x3C, 0xFA),
    I2CM_1A1D_W(0x90, 0x4E, 0x02),
    I2CM_1A1D_W(0x90, 0xED, 0x01),
    I2CM_1A1D_W(0x90, 0xEF, 0x05),
    I2CM_1A1D_W(0x90, 0x06, 0x64),//RAW10
    I2CM_1A1D_W(0x90, 0x09, 0x09),
    I2CM_1A1D_W(0x90, 0x0A, 0x05),
    I2CM_1A1D_W(0x90, 0x0D, 0x5E),
    I2CM_1A1D_W(0x90, 0x0E, 0x01),
    I2CM_1A1D_W(0x90, 0x0F, 0x00),//MIPI CSI disable
    I2CM_1A1D_W(0x90, 0x10, 0x02),//2Lane
    I2CM_1A1D_W(0x90, 0x11, 0x01),
    I2CM_1A1D_W(0x90, 0x15, 0x07),
    I2CM_1A1D_W(0x90, 0x17, 0x06),
    I2CM_1A1D_W(0x90, 0x18, 0x05),
    I2CM_1A1D_W(0x90, 0x3B, 0x00),
    I2CM_1A1D_W(0x90, 0x40, 0x16),
    I2CM_1A1D_W(0x90, 0x41, 0x28),//1D
    I2CM_1A1D_W(0x90, 0x43, 0x02),
    I2CM_1A1D_W(0x90, 0x44, 0x01),
    I2CM_1A1D_W(0x90, 0x49, 0x01),
    I2CM_1A1D_W(0x90, 0x4F, 0x01),
    I2CM_1A1D_W(0x90, 0x5B, 0x10),//00, B04A, Reset_by_Vsync_En=1
    I2CM_1A1D_W(0x90, 0x94, 0x04),
    I2CM_1A1D_W(0x90, 0xB0, 0x01),
    I2CM_1A1D_W(0x90, 0xED, 0x01),
    I2CM_1A1D_W(0x90, 0xEF, 0x06),
    I2CM_1A1D_W(0x90, 0x00, 0x0C),
    I2CM_1A1D_W(0x90, 0x02, 0x13),
    I2CM_1A1D_W(0x90, 0x06, 0x02),
    I2CM_1A1D_W(0x90, 0x09, 0x02),
    I2CM_1A1D_W(0x90, 0x0A, 0x15),
    I2CM_1A1D_W(0x90, 0x0B, 0x90),
    I2CM_1A1D_W(0x90, 0x0C, 0x90),
    I2CM_1A1D_W(0x90, 0x0D, 0x90),
    I2CM_1A1D_W(0x90, 0x0F, 0x1B),
    I2CM_1A1D_W(0x90, 0x10, 0x20),
    I2CM_1A1D_W(0x90, 0x11, 0x1B),
    I2CM_1A1D_W(0x90, 0x12, 0x20),
    I2CM_1A1D_W(0x90, 0x18, 0x40),
    I2CM_1A1D_W(0x90, 0x1A, 0x40),
    I2CM_1A1D_W(0x90, 0x28, 0x03),
    I2CM_1A1D_W(0x90, 0x2B, 0x20),
    I2CM_1A1D_W(0x90, 0x2D, 0x00),
    I2CM_1A1D_W(0x90, 0x2E, 0x20),
    I2CM_1A1D_W(0x90, 0x2F, 0x20),
    I2CM_1A1D_W(0x90, 0x4A, 0x40),
    I2CM_1A1D_W(0x90, 0x4B, 0x40),
    I2CM_1A1D_W(0x90, 0x98, 0x06), //LTM bypass, LTM_EnH=0
    I2CM_1A1D_W(0x90, 0x99, 0x23),
    I2CM_1A1D_W(0x90, 0x9E, 0x42),
    I2CM_1A1D_W(0x90, 0x9F, 0x44), // Cmd_LTM_LThd[4:0]=8
    I2CM_1A1D_W(0x90, 0xF1, 0x01),
    I2CM_1A1D_W(0x90, 0xEF, 0x05),
    I2CM_1A1D_W(0x90, 0x3B, 0x00),//R_Cmd_Gated_MIPI_Clk=0
    I2CM_1A1D_W(0x90, 0xED, 0x01),
    I2CM_1A1D_W(0x90, 0xEF, 0x01),
    I2CM_1A1D_W(0x90, 0x02, 0xFB),//ResetTG
    I2CM_1A1D_W(0x90, 0x09, 0x01),
    I2CM_1A1D_W(0x90, 0xEF, 0x00),
    I2CM_1A1D_W(0x90, 0x11, 0x00),//GatedAllClk disable, this command move to before MIPI CSI enable(avoid LTM on display abnormal)
    //I2CM_1A1D_W(0x90, 0xDL, 0x2 ),
    I2CM_1A1D_W(0x90, 0xEF, 0x05),
    I2CM_1A1D_W(0x90, 0x0F, 0x01),//MIPI CSI enable
    I2CM_1A1D_W(0x90, 0xED, 0x01),

#endif
#elif (_PS5520_SNR_SETTING_ == 1)   // 2608x1960@30fps
    I2CM_1A1D_W( 0x90, 0xEF, 0x05),
    I2CM_1A1D_W( 0x90, 0x0F, 0x00),
    I2CM_1A1D_W( 0x90, 0x43, 0x02),
    I2CM_1A1D_W( 0x90, 0x44, 0x00), //T_pll_enh=0
    I2CM_1A1D_W( 0x90, 0xED, 0x01),
    I2CM_1A1D_W( 0x90, 0xEF, 0x01),
    I2CM_1A1D_W( 0x90, 0xF5, 0x01),
    I2CM_1A1D_W( 0x90, 0x09, 0x01),
    I2CM_1A1D_W( 0x90, 0xEF, 0x00),
    I2CM_1A1D_W( 0x90, 0x10, 0x80), //Cmd_BYTECLK_InvSel=0 for PS308
    I2CM_1A1D_W( 0x90, 0x11, 0x80), //GatedAllClk enable
    I2CM_1A1D_W( 0x90, 0x35, 0x01),
    I2CM_1A1D_W( 0x90, 0x36, 0x1E),
    I2CM_1A1D_W( 0x90, 0x37, 0x1E),
    I2CM_1A1D_W( 0x90, 0x38, 0xE0),
    I2CM_1A1D_W( 0x90, 0x60, 0x58),
    I2CM_1A1D_W( 0x90, 0x61, 0xE4),
    I2CM_1A1D_W( 0x90, 0x62, 0x39),
    I2CM_1A1D_W( 0x90, 0x69, 0x10),
    I2CM_1A1D_W( 0x90, 0x6A, 0x40),
    I2CM_1A1D_W( 0x90, 0x85, 0xB0),
    I2CM_1A1D_W( 0x90, 0x98, 0x02),
    I2CM_1A1D_W( 0x90, 0x9E, 0x00),
    I2CM_1A1D_W( 0x90, 0xA0, 0x02),
    I2CM_1A1D_W( 0x90, 0xA2, 0x0A),
    I2CM_1A1D_W( 0x90, 0xD8, 0x10),
    I2CM_1A1D_W( 0x90, 0xDF, 0x24),
    I2CM_1A1D_W( 0x90, 0xE2, 0x05),
    I2CM_1A1D_W( 0x90, 0xE3, 0x24),
    I2CM_1A1D_W( 0x90, 0xE6, 0x05),
    I2CM_1A1D_W( 0x90, 0xF3, 0xB0), //B02A: Version
    I2CM_1A1D_W( 0x90, 0xF8, 0x2A), //B02A: Version
    I2CM_1A1D_W( 0x90, 0xED, 0x01),
    I2CM_1A1D_W( 0x90, 0xEF, 0x01),
    I2CM_1A1D_W( 0x90, 0x05, 0x0B),
    I2CM_1A1D_W( 0x90, 0x0A, 0x07), //07
    I2CM_1A1D_W( 0x90, 0x0B, 0xBB), //BB
    I2CM_1A1D_W( 0x90, 0x0D, 0x03),
    I2CM_1A1D_W( 0x90, 0x27, 0x0A),
    I2CM_1A1D_W( 0x90, 0x28, 0x8C),
    I2CM_1A1D_W( 0x90, 0x2A, 0x74),
    I2CM_1A1D_W( 0x90, 0x37, 0xBA),
    I2CM_1A1D_W( 0x90, 0x39, 0xC2),
    I2CM_1A1D_W( 0x90, 0x3E, 0x21),
    I2CM_1A1D_W( 0x90, 0x3F, 0x32),
    I2CM_1A1D_W( 0x90, 0x40, 0xC2), //F4
    I2CM_1A1D_W( 0x90, 0x41, 0x14), //13
    I2CM_1A1D_W( 0x90, 0x42, 0xF4),
    I2CM_1A1D_W( 0x90, 0x43, 0x2E), //FC
    I2CM_1A1D_W( 0x90, 0x51, 0x28),
    I2CM_1A1D_W( 0x90, 0x5C, 0x1E),
    I2CM_1A1D_W( 0x90, 0x5D, 0x0A),
    I2CM_1A1D_W( 0x90, 0x68, 0x00),
    I2CM_1A1D_W( 0x90, 0x69, 0x00),
    I2CM_1A1D_W( 0x90, 0x75, 0x74),
    I2CM_1A1D_W( 0x90, 0x8F, 0x08),
    I2CM_1A1D_W( 0x90, 0xA6, 0xA8),
    I2CM_1A1D_W( 0x90, 0xAA, 0x30),
    I2CM_1A1D_W( 0x90, 0xAE, 0x50),
    I2CM_1A1D_W( 0x90, 0xB0, 0x50),
    I2CM_1A1D_W( 0x90, 0xB3, 0x07),
    I2CM_1A1D_W( 0x90, 0xC6, 0x10),
    I2CM_1A1D_W( 0x90, 0xC9, 0x55),
    I2CM_1A1D_W( 0x90, 0xCE, 0x30),
    I2CM_1A1D_W( 0x90, 0xD0, 0x02),
    I2CM_1A1D_W( 0x90, 0xD1, 0x60),
    I2CM_1A1D_W( 0x90, 0xD3, 0x01),
    I2CM_1A1D_W( 0x90, 0xD4, 0x04),
    I2CM_1A1D_W( 0x90, 0xD5, 0x61),
    I2CM_1A1D_W( 0x90, 0xD8, 0xA0),
    I2CM_1A1D_W( 0x90, 0xDD, 0x42),
    I2CM_1A1D_W( 0x90, 0xE2, 0x0A),
    I2CM_1A1D_W( 0x90, 0xF0, 0x9D),
    I2CM_1A1D_W( 0x90, 0xF1, 0x16),
    I2CM_1A1D_W( 0x90, 0xF2, 0x26),
    I2CM_1A1D_W( 0x90, 0xF3, 0x0C),
    I2CM_1A1D_W( 0x90, 0xF5, 0x19),
    I2CM_1A1D_W( 0x90, 0x09, 0x01),
    I2CM_1A1D_W( 0x90, 0xEF, 0x02),
    I2CM_1A1D_W( 0x90, 0x2E, 0x04),
    I2CM_1A1D_W( 0x90, 0x33, 0x84),
    I2CM_1A1D_W( 0x90, 0x3C, 0xFA),
    I2CM_1A1D_W( 0x90, 0x4E, 0x02),
    I2CM_1A1D_W( 0x90, 0xED, 0x01),
    I2CM_1A1D_W( 0x90, 0xEF, 0x05),
    I2CM_1A1D_W( 0x90, 0x06, 0x64), //RAW10
    I2CM_1A1D_W( 0x90, 0x09, 0x09),
    I2CM_1A1D_W( 0x90, 0x0A, 0x05),
    I2CM_1A1D_W( 0x90, 0x0D, 0x5E),
    I2CM_1A1D_W( 0x90, 0x0E, 0x01),
    I2CM_1A1D_W( 0x90, 0x0F, 0x00), //MIPI CSI disable
    I2CM_1A1D_W( 0x90, 0x10, 0x02), //2Lane
    I2CM_1A1D_W( 0x90, 0x11, 0x01),
    I2CM_1A1D_W( 0x90, 0x15, 0x07),
    I2CM_1A1D_W( 0x90, 0x17, 0x06),
    I2CM_1A1D_W( 0x90, 0x18, 0x05),
    I2CM_1A1D_W( 0x90, 0x3B, 0x00),
    I2CM_1A1D_W( 0x90, 0x40, 0x16),
    I2CM_1A1D_W( 0x90, 0x41, 0x28), //1D
    I2CM_1A1D_W( 0x90, 0x43, 0x02),
    I2CM_1A1D_W( 0x90, 0x44, 0x01),
    I2CM_1A1D_W( 0x90, 0x49, 0x01),
    I2CM_1A1D_W( 0x90, 0x4F, 0x01),
    I2CM_1A1D_W( 0x90, 0x5B, 0x10),
    I2CM_1A1D_W( 0x90, 0x94, 0x04),
    I2CM_1A1D_W( 0x90, 0xB0, 0x01),
    I2CM_1A1D_W( 0x90, 0xED, 0x01),
    I2CM_1A1D_W( 0x90, 0xEF, 0x06),
    I2CM_1A1D_W( 0x90, 0x00, 0x0C),
    I2CM_1A1D_W( 0x90, 0x02, 0x13),
    I2CM_1A1D_W( 0x90, 0x06, 0x02),
    I2CM_1A1D_W( 0x90, 0x09, 0x02),
    I2CM_1A1D_W( 0x90, 0x0A, 0x15),
    I2CM_1A1D_W( 0x90, 0x0B, 0x90),
    I2CM_1A1D_W( 0x90, 0x0C, 0x90),
    I2CM_1A1D_W( 0x90, 0x0D, 0x90),
    I2CM_1A1D_W( 0x90, 0x0F, 0x1B),
    I2CM_1A1D_W( 0x90, 0x10, 0x20),
    I2CM_1A1D_W( 0x90, 0x11, 0x1B),
    I2CM_1A1D_W( 0x90, 0x12, 0x20),
    I2CM_1A1D_W( 0x90, 0x18, 0x40),
    I2CM_1A1D_W( 0x90, 0x1A, 0x40),
    I2CM_1A1D_W( 0x90, 0x28, 0x03),
    I2CM_1A1D_W( 0x90, 0x2B, 0x20),
    I2CM_1A1D_W( 0x90, 0x2D, 0x00),
    I2CM_1A1D_W( 0x90, 0x2E, 0x20),
    I2CM_1A1D_W( 0x90, 0x2F, 0x20),
    I2CM_1A1D_W( 0x90, 0x4A, 0x40),
    I2CM_1A1D_W( 0x90, 0x4B, 0x40),
    I2CM_1A1D_W( 0x90, 0x98, 0x06), //LTM bypass, LTM_EnH=0
    I2CM_1A1D_W( 0x90, 0x99, 0x23),
    I2CM_1A1D_W( 0x90, 0x9E, 0x42),
    I2CM_1A1D_W( 0x90, 0x9F, 0x44), // Cmd_LTM_LThd[4:0]=8
    I2CM_1A1D_W( 0x90, 0xF1, 0x01),
    I2CM_1A1D_W( 0x90, 0xEF, 0x05),
    I2CM_1A1D_W( 0x90, 0x3B, 0x00), //R_Cmd_Gated_MIPI_Clk=0
    I2CM_1A1D_W( 0x90, 0xED, 0x01),
    I2CM_1A1D_W( 0x90, 0xEF, 0x01),
    I2CM_1A1D_W( 0x90, 0x02, 0xFB), //ResetTG
    I2CM_1A1D_W( 0x90, 0x09, 0x01),
    I2CM_1A1D_W( 0x90, 0xEF, 0x00),
    I2CM_1A1D_W( 0x90, 0x11, 0x00), //GatedAllClk disable, this command move to before MIPI CSI enable(avoid LTM on display abnormal)
    I2CM_1A1D_W( 0x90, 0xEF, 0x05),
    I2CM_1A1D_W( 0x90, 0x0F, 0x01), //MIPI CSI enable
    I2CM_1A1D_W( 0x90, 0xED, 0x01),
#endif

#if defined(SENSOR_INIT_CMDQ_MODE)
    /*set cmdq0 idle*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_READY),
    VIF_REG_DUMMY(CMDQ_STATUS_READY),

    /*append dummy*/
    //CMDQ_TAG('EOT'),    //end of table
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
#endif

};

#endif
